% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forest_plot_examples.R
\name{forest_plot_comp}
\alias{forest_plot_comp}
\title{Produce a forest plot of model predictions}
\usage{
forest_plot_comp(
  composition_list,
  model = NULL,
  models_list = NULL,
  dataset,
  comp_labels,
  x_label = NULL,
  xllimit = NULL,
  xulimit = NULL,
  plot_log = FALSE,
  text_settings = NULL,
  pred_name = NULL,
  boxsize = 0.05,
  terms = TRUE,
  fixed_values = NULL,
  units = "unitless",
  specified_units = NULL,
  rounded_zeroes = TRUE,
  det_limit = NULL,
  transformation_type = "ilr",
  comparison_part = NULL,
  part_1 = NULL,
  cm = NULL,
  ...
)
}
\arguments{
\item{composition_list}{Named list of compositions. Note each composition should be stored as a data frame. For example, use the output of \code{change_composition}.}

\item{model}{Model to use for predictions.}

\item{models_list}{If \code{model} is \code{NULL} (or not set), a named list of models for which to plot model predictions in the forest plot. All models should have the same type.}

\item{dataset}{Dataset used to develop \code{model}.}

\item{comp_labels}{The labels of the compositional columns.}

\item{x_label}{x-axis label.}

\item{xllimit}{Minimum value for x-axis.}

\item{xulimit}{Maximum value for x-axis.}

\item{plot_log}{If this is \code{TRUE}, the x-axis will be log-transformed.}

\item{text_settings}{An optional argument to specify text formatting. It should be an \code{fpTxtGp} object (\code{forestplot} package).}

\item{pred_name}{Name for column of predictions in plot.}

\item{boxsize}{Sets the size of boxes for estimates on the forest plot.}

\item{terms}{Are estimates for differences in outcome associated with differences in compositional variables? If \code{terms = TRUE} all estimates and plots will be for difference in outcome associated with differences in the compositional variables. If \code{terms = FALSE}, \code{fixed_values} is used to set the values of the non-compositional covariates, and outputs are predictions for the outcome based on these values of the non-compositional covariates and the given value of the compositional variables (and confidence intervals include uncertainty due to all variables in the model, not just the compositional variables).}

\item{fixed_values}{If \code{terms = FALSE}, this gives the fixed values of the non-compositional covariates at which to calculate the prediction. It is generated automatically if not set.}

\item{units}{What should the units of the compositional variables be in any output? Currently available are "unitless" (where working in terms of proportions), "hr/day", "hr/wk", "min/day", "min/wk" and "specified", in which case the \code{specified_units} argument should be set. Note that this doesn't specify the input units, as this is not relevant for any function.}

\item{specified_units}{If units are being specified via the composition sum, this is where it is done. It should be a vector where the first argument is a string describing the units, and the second argument is the expected sum of a composition e.g. \code{c("hr/day", 24)}}

\item{rounded_zeroes}{Are zeroes rounded zeroes?}

\item{det_limit}{Detection limit if zeroes are to be imputed. This must be set if \code{rounded_zeroes} is \code{TRUE} and should be the
minimum measurable value in the compositional columns of data. It should be on the same scale as the (input) compositional columns in \code{dataset} (NB it doesn't need to match \code{new_data}).}

\item{transformation_type}{The type of transformation desired. Should be \code{"ilr", "alr"} or \code{"clr"}.}

\item{comparison_part}{Only needed for alr transformation. Should be an element of \code{comp_labels}. Name of part that all other parts will be compared to.}

\item{part_1}{Only used if first part in ilr-pivot coordinate transformation. Passed to \code{alter_order_comp_labels} unless \code{NULL}.}

\item{cm}{Can be set with compositional mean to speed up calculation. This should NOT be set manually and should only be passed from other functions.}

\item{...}{
  Arguments passed on to \code{\link[forestplot:forestplot]{forestplot::forestplot}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
Forest plot showing model predictions.
}
\description{
This function takes a named list of compositions, and plots model predictions for each composition.
}
\examples{
# Example using a list of models
  # First we set up composition list
df <- as.data.frame(comp_mean(data = simdata,
                             comp_labels = c("vigorous", "moderate", "light", "sedentary", "sleep"),
                             units = "hr/day"))
new_comp <- change_composition(composition = df, main_part = "moderate",
                             main_change = +0.5,
                             comp_labels = c("vigorous", "moderate", "light", "sedentary", "sleep"))
new_comp2 <- change_composition(composition = df, main_part = "sedentary",
                             main_change = -3.5,
                             comp_labels = c("vigorous", "moderate", "light", "sedentary", "sleep"))
list_for_plot <- list("Extra 0.5 hr/day moderate" = new_comp,
                      "3.5 hr/day less sedentary" = new_comp2)

 # Then calculate models
lm_BMI_unadjusted <- comp_model(type = "linear", outcome = "BMI",
                                data = simdata,
                                comp_labels = c("vigorous", "moderate", "light", "sedentary", "sleep"))
lm_BMI_age_group_only <- comp_model(type = "linear", outcome = "BMI",
                                    covariates = c("agegroup"), data = simdata,
                                    comp_labels = c("vigorous", "moderate", "light", "sedentary", "sleep"))

  # Finally, plot
forest_plot_comp(composition_list = list_for_plot,
                 models_list = list("Unadjusted" = lm_BMI_unadjusted, "Age-adjusted" = lm_BMI_age_group_only),
                 dataset = simdata,
                 comp_labels = c("vigorous", "moderate", "light", "sedentary", "sleep"))
}
